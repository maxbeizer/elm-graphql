-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Github.Object.UserContentEdit exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Github.Object
import Github.Interface
import Github.Union
import Github.Scalar
import Github.InputObject
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)



{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Github.Object.UserContentEdit
selection constructor =
    Object.selection constructor
{-| Identifies the date and time when the object was created.
-}
createdAt : Field Github.Scalar.DateTime Github.Object.UserContentEdit
createdAt =
      Object.fieldDecoder "createdAt" [] (Object.scalarDecoder |> Decode.map Github.Scalar.DateTime)


{-| Identifies the date and time when the object was deleted.
-}
deletedAt : Field (Maybe Github.Scalar.DateTime) Github.Object.UserContentEdit
deletedAt =
      Object.fieldDecoder "deletedAt" [] (Object.scalarDecoder |> Decode.map Github.Scalar.DateTime |> Decode.nullable)


{-| The actor who deleted this content
-}
deletedBy : SelectionSet decodesTo Github.Interface.Actor -> Field (Maybe decodesTo) Github.Object.UserContentEdit
deletedBy object_ =
      Object.selectionField "deletedBy" [] (object_) (identity >> Decode.nullable)


{-| A summary of the changes for this edit
-}
diff : Field (Maybe String) Github.Object.UserContentEdit
diff =
      Object.fieldDecoder "diff" [] (Decode.string |> Decode.nullable)


{-| When this content was edited
-}
editedAt : Field Github.Scalar.DateTime Github.Object.UserContentEdit
editedAt =
      Object.fieldDecoder "editedAt" [] (Object.scalarDecoder |> Decode.map Github.Scalar.DateTime)


{-| The actor who edited this content
-}
editor : SelectionSet decodesTo Github.Interface.Actor -> Field (Maybe decodesTo) Github.Object.UserContentEdit
editor object_ =
      Object.selectionField "editor" [] (object_) (identity >> Decode.nullable)


id : Field Github.Scalar.Id Github.Object.UserContentEdit
id =
      Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Github.Scalar.Id)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : Field Github.Scalar.DateTime Github.Object.UserContentEdit
updatedAt =
      Object.fieldDecoder "updatedAt" [] (Object.scalarDecoder |> Decode.map Github.Scalar.DateTime)
