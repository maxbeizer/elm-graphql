-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Github.Object.BranchProtectionRuleConflict exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Github.Object
import Github.Interface
import Github.Union
import Github.Scalar
import Github.InputObject
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)



{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Github.Object.BranchProtectionRuleConflict
selection constructor =
    Object.selection constructor
{-| Identifies the branch protection rule.
-}
branchProtectionRule : SelectionSet decodesTo Github.Object.BranchProtectionRule -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
branchProtectionRule object_ =
      Object.selectionField "branchProtectionRule" [] (object_) (identity >> Decode.nullable)


{-| Identifies the conflicting branch protection rule.
-}
conflictingBranchProtectionRule : SelectionSet decodesTo Github.Object.BranchProtectionRule -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
conflictingBranchProtectionRule object_ =
      Object.selectionField "conflictingBranchProtectionRule" [] (object_) (identity >> Decode.nullable)


{-| Identifies the branch ref that has conflicting rules
-}
ref : SelectionSet decodesTo Github.Object.Ref -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
ref object_ =
      Object.selectionField "ref" [] (object_) (identity >> Decode.nullable)
