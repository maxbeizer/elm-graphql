-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Github.Object.BranchProtectionRuleConflict exposing (..)

import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Github.Object.BranchProtectionRuleConflict
selection constructor =
    Object.selection constructor


{-| Identifies the branch protection rule.
-}
branchProtectionRule : SelectionSet decodesTo Github.Object.BranchProtectionRule -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
branchProtectionRule object =
    Object.selectionField "branchProtectionRule" [] object (identity >> Decode.nullable)


{-| Identifies the conflicting branch protection rule.
-}
conflictingBranchProtectionRule : SelectionSet decodesTo Github.Object.BranchProtectionRule -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
conflictingBranchProtectionRule object =
    Object.selectionField "conflictingBranchProtectionRule" [] object (identity >> Decode.nullable)


{-| Identifies the branch ref that has conflicting rules
-}
ref : SelectionSet decodesTo Github.Object.Ref -> Field (Maybe decodesTo) Github.Object.BranchProtectionRuleConflict
ref object =
    Object.selectionField "ref" [] object (identity >> Decode.nullable)
