-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Github.Object.ProtectedBranch exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Github.Object
import Github.Interface
import Github.Union
import Github.Scalar
import Github.InputObject
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)



{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Github.Object.ProtectedBranch
selection constructor =
    Object.selection constructor
{-| The actor who created this protected branch.
-}
creator : SelectionSet decodesTo Github.Interface.Actor -> Field (Maybe decodesTo) Github.Object.ProtectedBranch
creator object_ =
      Object.selectionField "creator" [] (object_) (identity >> Decode.nullable)


{-| Will new commits pushed to this branch dismiss pull request review approvals.
-}
hasDismissableStaleReviews : Field Bool Github.Object.ProtectedBranch
hasDismissableStaleReviews =
      Object.fieldDecoder "hasDismissableStaleReviews" [] (Decode.bool)


{-| Are reviews required to update this branch.
-}
hasRequiredReviews : Field Bool Github.Object.ProtectedBranch
hasRequiredReviews =
      Object.fieldDecoder "hasRequiredReviews" [] (Decode.bool)


{-| Are status checks required to update this branch.
-}
hasRequiredStatusChecks : Field Bool Github.Object.ProtectedBranch
hasRequiredStatusChecks =
      Object.fieldDecoder "hasRequiredStatusChecks" [] (Decode.bool)


{-| Is pushing to this branch restricted.
-}
hasRestrictedPushes : Field Bool Github.Object.ProtectedBranch
hasRestrictedPushes =
      Object.fieldDecoder "hasRestrictedPushes" [] (Decode.bool)


{-| Is dismissal of pull request reviews restricted.
-}
hasRestrictedReviewDismissals : Field Bool Github.Object.ProtectedBranch
hasRestrictedReviewDismissals =
      Object.fieldDecoder "hasRestrictedReviewDismissals" [] (Decode.bool)


{-| Are branches required to be up to date before merging.
-}
hasStrictRequiredStatusChecks : Field Bool Github.Object.ProtectedBranch
hasStrictRequiredStatusChecks =
      Object.fieldDecoder "hasStrictRequiredStatusChecks" [] (Decode.bool)


id : Field Github.Scalar.Id Github.Object.ProtectedBranch
id =
      Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Github.Scalar.Id)


{-| Can admins overwrite branch protection.
-}
isAdminEnforced : Field Bool Github.Object.ProtectedBranch
isAdminEnforced =
      Object.fieldDecoder "isAdminEnforced" [] (Decode.bool)


{-| The name of the protected branch rule.
-}
name : Field String Github.Object.ProtectedBranch
name =
      Object.fieldDecoder "name" [] (Decode.string)


type alias PushAllowancesOptionalArguments = { after : OptionalArgument String, before : OptionalArgument String, first : OptionalArgument Int, last : OptionalArgument Int }

{-| A list push allowances for this protected branch.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pushAllowances : (PushAllowancesOptionalArguments -> PushAllowancesOptionalArguments) -> SelectionSet decodesTo Github.Object.PushAllowanceConnection -> Field decodesTo Github.Object.ProtectedBranch
pushAllowances fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after (Encode.string), Argument.optional "before" filledInOptionals.before (Encode.string), Argument.optional "first" filledInOptionals.first (Encode.int), Argument.optional "last" filledInOptionals.last (Encode.int) ]
                |> List.filterMap identity
    in
      Object.selectionField "pushAllowances" optionalArgs (object_) (identity)


{-| The repository associated with this protected branch.
-}
repository : SelectionSet decodesTo Github.Object.Repository -> Field decodesTo Github.Object.ProtectedBranch
repository object_ =
      Object.selectionField "repository" [] (object_) (identity)


{-| List of required status check contexts that must pass for commits to be accepted to this branch.
-}
requiredStatusCheckContexts : Field (Maybe (List (Maybe String))) Github.Object.ProtectedBranch
requiredStatusCheckContexts =
      Object.fieldDecoder "requiredStatusCheckContexts" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


type alias ReviewDismissalAllowancesOptionalArguments = { after : OptionalArgument String, before : OptionalArgument String, first : OptionalArgument Int, last : OptionalArgument Int }

{-| A list review dismissal allowances for this protected branch.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
reviewDismissalAllowances : (ReviewDismissalAllowancesOptionalArguments -> ReviewDismissalAllowancesOptionalArguments) -> SelectionSet decodesTo Github.Object.ReviewDismissalAllowanceConnection -> Field decodesTo Github.Object.ProtectedBranch
reviewDismissalAllowances fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after (Encode.string), Argument.optional "before" filledInOptionals.before (Encode.string), Argument.optional "first" filledInOptionals.first (Encode.int), Argument.optional "last" filledInOptionals.last (Encode.int) ]
                |> List.filterMap identity
    in
      Object.selectionField "reviewDismissalAllowances" optionalArgs (object_) (identity)
