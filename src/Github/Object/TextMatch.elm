-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Github.Object.TextMatch exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Github.Object
import Github.Interface
import Github.Union
import Github.Scalar
import Github.InputObject
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)



{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Github.Object.TextMatch
selection constructor =
    Object.selection constructor
{-| The specific text fragment within the property matched on.
-}
fragment : Field String Github.Object.TextMatch
fragment =
      Object.fieldDecoder "fragment" [] (Decode.string)


{-| Highlights within the matched fragment.
-}
highlights : SelectionSet decodesTo Github.Object.TextMatchHighlight -> Field (List decodesTo) Github.Object.TextMatch
highlights object_ =
      Object.selectionField "highlights" [] (object_) (identity >> Decode.list)


{-| The property matched on.
-}
property : Field String Github.Object.TextMatch
property =
      Object.fieldDecoder "property" [] (Decode.string)
