-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Github.Enum.IssuePubSubTopic exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible PubSub channels for an issue.

  - Updated - The channel ID for observing issue updates.
  - Markasread - The channel ID for marking an issue as read.
  - Timeline - The channel ID for updating items on the issue timeline.
  - State - The channel ID for observing issue state updates.

-}
type IssuePubSubTopic
    = Updated
    | Markasread
    | Timeline
    | State


decoder : Decoder IssuePubSubTopic
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "UPDATED" ->
                        Decode.succeed Updated

                    "MARKASREAD" ->
                        Decode.succeed Markasread

                    "TIMELINE" ->
                        Decode.succeed Timeline

                    "STATE" ->
                        Decode.succeed State

                    _ ->
                        Decode.fail ("Invalid IssuePubSubTopic type, " ++ string ++ " try re-running the graphqelm CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : IssuePubSubTopic -> String
toString enum =
    case enum of
        Updated ->
            "UPDATED"

        Markasread ->
            "MARKASREAD"

        Timeline ->
            "TIMELINE"

        State ->
            "STATE"
